name: CD

on:
  push:
    branches: [ main ]
    paths:
      - 'oelp_backend/**'
      - 'Dockerfile'
      - 'docker/**'
      - 'requirements.txt'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/oelp-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -e
            mkdir -p ~/oelp
            cd ~/oelp
            cat > docker-compose.yml <<'YML'
            version: '3.9'
            services:
              db:
                image: postgis/postgis:16-3.4
                environment:
                  POSTGRES_DB: ${DB_NAME}
                  POSTGRES_USER: ${DB_USER}
                  POSTGRES_PASSWORD: ${DB_PASSWORD}
                volumes:
                  - pgdata:/var/lib/postgresql/data
              redis:
                image: redis:7-alpine
              web:
                image: ghcr.io/${OWNER}/oelp-backend:latest
                env_file:
                  - .env
                environment:
                  DB_HOST: db
                  DB_PORT: 5432
                  CELERY_BROKER_URL: redis://redis:6379/0
                  CELERY_RESULT_BACKEND: redis://redis:6379/0
                ports:
                  - "8000:8000"
                depends_on:
                  - db
                  - redis
            volumes:
              pgdata:
            YML
            OWNER=${{ github.repository_owner }}
            sed -i "s|\${OWNER}|${OWNER}|g" docker-compose.yml
            docker compose pull
            docker compose up -d --remove-orphans

